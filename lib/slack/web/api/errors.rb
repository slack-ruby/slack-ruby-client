# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Web
    module Api
      module Errors
        class AccountInactive < SlackError; end
        class AlreadyArchived < SlackError; end
        class AlreadyInChannel < SlackError; end
        class AlreadyPinned < SlackError; end
        class AlreadyReacted < SlackError; end
        class AlreadyStarred < SlackError; end
        class AppMissingActionUrl < SlackError; end
        class BadClientSecret < SlackError; end
        class BadImage < SlackError; end
        class BadTimestamp < SlackError; end
        class BadToken < SlackError; end
        class BotNotFound < SlackError; end
        class CannotAddBot < SlackError; end
        class CannotAddOthers < SlackError; end
        class CannotAddOthersRecurring < SlackError; end
        class CannotAddSlackbot < SlackError; end
        class CannotCompleteOthers < SlackError; end
        class CannotCompleteRecurring < SlackError; end
        class CannotCreateDialog < SlackError; end
        class CannotFindService < SlackError; end
        class CannotParse < SlackError; end
        class CannotPrompt < SlackError; end
        class CannotUnfurlUrl < SlackError; end
        class CannotUpdateAdminUser < SlackError; end
        class CantArchiveGeneral < SlackError; end
        class CantDelete < SlackError; end
        class CantDeleteFile < SlackError; end
        class CantDeleteMessage < SlackError; end
        class CantInvite < SlackError; end
        class CantInviteSelf < SlackError; end
        class CantKickFromGeneral < SlackError; end
        class CantKickSelf < SlackError; end
        class CantLeaveGeneral < SlackError; end
        class CantLeaveMandatorySharedChannel < SlackError; end
        class CantUpdateMessage < SlackError; end
        class ChannelNotFound < SlackError; end
        class ClientIdTokenMismatch < SlackError; end
        class CommentNotFound < SlackError; end
        class ComplianceExportsPreventDeletion < SlackError; end
        class EditWindowClosed < SlackError; end
        class EkmAccessDenied < SlackError; end
        class EnterpriseIsRestricted < SlackError; end
        class FailedSendingDialog < SlackError; end
        class FatalError < SlackError; end
        class FetchMembersFailed < SlackError; end
        class FileCommentNotFound < SlackError; end
        class FileDeleted < SlackError; end
        class FileNotFound < SlackError; end
        class FileNotShared < SlackError; end
        class FileUploadsDisabled < SlackError; end
        class FileUploadsExceptImagesDisabled < SlackError; end
        class GroupContainsOthers < SlackError; end
        class InvalidArgName < SlackError; end
        class InvalidArguments < SlackError; end
        class InvalidArrayArg < SlackError; end
        class InvalidAuth < SlackError; end
        class InvalidChannel < SlackError; end
        class InvalidCharset < SlackError; end
        class InvalidClientId < SlackError; end
        class InvalidCursor < SlackError; end
        class InvalidForExternalSharedChannel < SlackError; end
        class InvalidFormData < SlackError; end
        class InvalidJson < SlackError; end
        class InvalidLimit < SlackError; end
        class InvalidName < SlackError; end
        class InvalidNameMaxlength < SlackError; end
        class InvalidNamePunctuation < SlackError; end
        class InvalidNameRequired < SlackError; end
        class InvalidNameSpecials < SlackError; end
        class InvalidPostType < SlackError; end
        class InvalidPresence < SlackError; end
        class InvalidProfile < SlackError; end
        class InvalidScheduledMessageId < SlackError; end
        class InvalidScope < SlackError; end
        class InvalidTime < SlackError; end
        class InvalidTimestamp < SlackError; end
        class InvalidTrigger < SlackError; end
        class InvalidTsLatest < SlackError; end
        class InvalidTsOldest < SlackError; end
        class InvalidTypes < SlackError; end
        class InvalidUser < SlackError; end
        class IsArchived < SlackError; end
        class JsonNotObject < SlackError; end
        class LastMember < SlackError; end
        class LimitRequired < SlackError; end
        class MessageNotFound < SlackError; end
        class MethodNotSupportedForChannelType < SlackError; end
        class MissingCharset < SlackError; end
        class MissingDialog < SlackError; end
        class MissingDuration < SlackError; end
        class MissingPostType < SlackError; end
        class MissingScope < SlackError; end
        class MissingTrigger < SlackError; end
        class MissingUnfurls < SlackError; end
        class MsgTooLong < SlackError; end
        class NameTaken < SlackError; end
        class NoChannel < SlackError; end
        class NoItemSpecified < SlackError; end
        class NoPermission < SlackError; end
        class NoReaction < SlackError; end
        class NoText < SlackError; end
        class NoUser < SlackError; end
        class NotAdmin < SlackError; end
        class NotAllowed < SlackError; end
        class NotAppAdmin < SlackError; end
        class NotArchived < SlackError; end
        class NotAuthed < SlackError; end
        class NotAuthorized < SlackError; end
        class NotEnoughUsers < SlackError; end
        class NotEnterpriseTeam < SlackError; end
        class NotFound < SlackError; end
        class NotInChannel < SlackError; end
        class NotInGroup < SlackError; end
        class NotPinnable < SlackError; end
        class NotPinned < SlackError; end
        class NotStarred < SlackError; end
        class NotSupported < SlackError; end
        class OrgLoginRequired < SlackError; end
        class OverPaginationLimit < SlackError; end
        class PaidOnly < SlackError; end
        class PermissionDenied < SlackError; end
        class PostingToGeneralChannelDenied < SlackError; end
        class ProfileSetFailed < SlackError; end
        class RateLimited < SlackError; end
        class RequestTimeout < SlackError; end
        class ReservedName < SlackError; end
        class RestrictedAction < SlackError; end
        class RestrictedActionNonThreadableChannel < SlackError; end
        class RestrictedActionReadOnlyChannel < SlackError; end
        class RestrictedActionThreadOnlyChannel < SlackError; end
        class SnoozeEndFailed < SlackError; end
        class SnoozeFailed < SlackError; end
        class SnoozeNotActive < SlackError; end
        class StorageLimitReached < SlackError; end
        class SuperfluousCharset < SlackError; end
        class TeamAddedToOrg < SlackError; end
        class ThreadNotFound < SlackError; end
        class TimeInPast < SlackError; end
        class TimeTooFar < SlackError; end
        class TimezoneCountFailed < SlackError; end
        class TokenRevoked < SlackError; end
        class TooLarge < SlackError; end
        class TooLong < SlackError; end
        class TooManyAttachments < SlackError; end
        class TooManyEmoji < SlackError; end
        class TooManyFrames < SlackError; end
        class TooManyReactions < SlackError; end
        class TooManyUsers < SlackError; end
        class TriggerExchanged < SlackError; end
        class TriggerExpired < SlackError; end
        class UnknownError < SlackError; end
        class UnknownType < SlackError; end
        class UpgradeRequire < SlackError; end
        class UpgradeRequired < SlackError; end
        class UraMaxChannels < SlackError; end
        class UserDisabled < SlackError; end
        class UserDoesNotOwnChannel < SlackError; end
        class UserIsBot < SlackError; end
        class UserIsRestricted < SlackError; end
        class UserIsUltraRestricted < SlackError; end
        class UserNotFound < SlackError; end
        class UserNotInChannel < SlackError; end
        class UserNotVisible < SlackError; end
        class UsersListNotSupplied < SlackError; end
        class UsersNotFound < SlackError; end
        class ValidationErrors < SlackError; end

        ERROR_CLASSES = {
          'account_inactive' => AccountInactive,
          'already_archived' => AlreadyArchived,
          'already_in_channel' => AlreadyInChannel,
          'already_pinned' => AlreadyPinned,
          'already_reacted' => AlreadyReacted,
          'already_starred' => AlreadyStarred,
          'app_missing_action_url' => AppMissingActionUrl,
          'bad_client_secret' => BadClientSecret,
          'bad_image' => BadImage,
          'bad_timestamp' => BadTimestamp,
          'bad_token' => BadToken,
          'bot_not_found' => BotNotFound,
          'cannot_add_bot' => CannotAddBot,
          'cannot_add_others' => CannotAddOthers,
          'cannot_add_others_recurring' => CannotAddOthersRecurring,
          'cannot_add_slackbot' => CannotAddSlackbot,
          'cannot_complete_others' => CannotCompleteOthers,
          'cannot_complete_recurring' => CannotCompleteRecurring,
          'cannot_create_dialog' => CannotCreateDialog,
          'cannot_find_service' => CannotFindService,
          'cannot_parse' => CannotParse,
          'cannot_prompt' => CannotPrompt,
          'cannot_unfurl_url' => CannotUnfurlUrl,
          'cannot_update_admin_user' => CannotUpdateAdminUser,
          'cant_archive_general' => CantArchiveGeneral,
          'cant_delete' => CantDelete,
          'cant_delete_file' => CantDeleteFile,
          'cant_delete_message' => CantDeleteMessage,
          'cant_invite' => CantInvite,
          'cant_invite_self' => CantInviteSelf,
          'cant_kick_from_general' => CantKickFromGeneral,
          'cant_kick_self' => CantKickSelf,
          'cant_leave_general' => CantLeaveGeneral,
          'cant_leave_mandatory_shared_channel' => CantLeaveMandatorySharedChannel,
          'cant_update_message' => CantUpdateMessage,
          'channel_not_found' => ChannelNotFound,
          'client_id_token_mismatch' => ClientIdTokenMismatch,
          'comment_not_found' => CommentNotFound,
          'compliance_exports_prevent_deletion' => ComplianceExportsPreventDeletion,
          'edit_window_closed' => EditWindowClosed,
          'ekm_access_denied' => EkmAccessDenied,
          'enterprise_is_restricted' => EnterpriseIsRestricted,
          'failed_sending_dialog' => FailedSendingDialog,
          'fatal_error' => FatalError,
          'fetch_members_failed' => FetchMembersFailed,
          'file_comment_not_found' => FileCommentNotFound,
          'file_deleted' => FileDeleted,
          'file_not_found' => FileNotFound,
          'file_not_shared' => FileNotShared,
          'file_uploads_disabled' => FileUploadsDisabled,
          'file_uploads_except_images_disabled' => FileUploadsExceptImagesDisabled,
          'group_contains_others' => GroupContainsOthers,
          'invalid_arg_name' => InvalidArgName,
          'invalid_arguments' => InvalidArguments,
          'invalid_array_arg' => InvalidArrayArg,
          'invalid_auth' => InvalidAuth,
          'invalid_channel' => InvalidChannel,
          'invalid_charset' => InvalidCharset,
          'invalid_client_id' => InvalidClientId,
          'invalid_cursor' => InvalidCursor,
          'invalid_for_external_shared_channel' => InvalidForExternalSharedChannel,
          'invalid_form_data' => InvalidFormData,
          'invalid_json' => InvalidJson,
          'invalid_limit' => InvalidLimit,
          'invalid_name' => InvalidName,
          'invalid_name_maxlength' => InvalidNameMaxlength,
          'invalid_name_punctuation' => InvalidNamePunctuation,
          'invalid_name_required' => InvalidNameRequired,
          'invalid_name_specials' => InvalidNameSpecials,
          'invalid_post_type' => InvalidPostType,
          'invalid_presence' => InvalidPresence,
          'invalid_profile' => InvalidProfile,
          'invalid_scheduled_message_id' => InvalidScheduledMessageId,
          'invalid_scope' => InvalidScope,
          'invalid_time' => InvalidTime,
          'invalid_timestamp' => InvalidTimestamp,
          'invalid_trigger' => InvalidTrigger,
          'invalid_ts_latest' => InvalidTsLatest,
          'invalid_ts_oldest' => InvalidTsOldest,
          'invalid_types' => InvalidTypes,
          'invalid_user' => InvalidUser,
          'is_archived' => IsArchived,
          'json_not_object' => JsonNotObject,
          'last_member' => LastMember,
          'limit_required' => LimitRequired,
          'message_not_found' => MessageNotFound,
          'method_not_supported_for_channel_type' => MethodNotSupportedForChannelType,
          'missing_charset' => MissingCharset,
          'missing_dialog' => MissingDialog,
          'missing_duration' => MissingDuration,
          'missing_post_type' => MissingPostType,
          'missing_scope' => MissingScope,
          'missing_trigger' => MissingTrigger,
          'missing_unfurls' => MissingUnfurls,
          'msg_too_long' => MsgTooLong,
          'name_taken' => NameTaken,
          'no_channel' => NoChannel,
          'no_item_specified' => NoItemSpecified,
          'no_permission' => NoPermission,
          'no_reaction' => NoReaction,
          'no_text' => NoText,
          'no_user' => NoUser,
          'not_admin' => NotAdmin,
          'not_allowed' => NotAllowed,
          'not_app_admin' => NotAppAdmin,
          'not_archived' => NotArchived,
          'not_authed' => NotAuthed,
          'not_authorized' => NotAuthorized,
          'not_enough_users' => NotEnoughUsers,
          'not_enterprise_team' => NotEnterpriseTeam,
          'not_found' => NotFound,
          'not_in_channel' => NotInChannel,
          'not_in_group' => NotInGroup,
          'not_pinnable' => NotPinnable,
          'not_pinned' => NotPinned,
          'not_starred' => NotStarred,
          'not_supported' => NotSupported,
          'org_login_required' => OrgLoginRequired,
          'over_pagination_limit' => OverPaginationLimit,
          'paid_only' => PaidOnly,
          'permission_denied' => PermissionDenied,
          'posting_to_general_channel_denied' => PostingToGeneralChannelDenied,
          'profile_set_failed' => ProfileSetFailed,
          'rate_limited' => RateLimited,
          'request_timeout' => RequestTimeout,
          'reserved_name' => ReservedName,
          'restricted_action' => RestrictedAction,
          'restricted_action_non_threadable_channel' => RestrictedActionNonThreadableChannel,
          'restricted_action_read_only_channel' => RestrictedActionReadOnlyChannel,
          'restricted_action_thread_only_channel' => RestrictedActionThreadOnlyChannel,
          'snooze_end_failed' => SnoozeEndFailed,
          'snooze_failed' => SnoozeFailed,
          'snooze_not_active' => SnoozeNotActive,
          'storage_limit_reached' => StorageLimitReached,
          'superfluous_charset' => SuperfluousCharset,
          'team_added_to_org' => TeamAddedToOrg,
          'thread_not_found' => ThreadNotFound,
          'time_in_past' => TimeInPast,
          'time_too_far' => TimeTooFar,
          'timezone_count_failed' => TimezoneCountFailed,
          'token_revoked' => TokenRevoked,
          'too_large' => TooLarge,
          'too_long' => TooLong,
          'too_many_attachments' => TooManyAttachments,
          'too_many_emoji' => TooManyEmoji,
          'too_many_frames' => TooManyFrames,
          'too_many_reactions' => TooManyReactions,
          'too_many_users' => TooManyUsers,
          'trigger_exchanged' => TriggerExchanged,
          'trigger_expired' => TriggerExpired,
          'unknown_error' => UnknownError,
          'unknown_type' => UnknownType,
          'upgrade_require' => UpgradeRequire,
          'upgrade_required' => UpgradeRequired,
          'ura_max_channels' => UraMaxChannels,
          'user_disabled' => UserDisabled,
          'user_does_not_own_channel' => UserDoesNotOwnChannel,
          'user_is_bot' => UserIsBot,
          'user_is_restricted' => UserIsRestricted,
          'user_is_ultra_restricted' => UserIsUltraRestricted,
          'user_not_found' => UserNotFound,
          'user_not_in_channel' => UserNotInChannel,
          'user_not_visible' => UserNotVisible,
          'users_list_not_supplied' => UsersListNotSupplied,
          'users_not_found' => UsersNotFound,
          'validation_errors' => ValidationErrors,
        }.freeze
      end
    end
  end
end
