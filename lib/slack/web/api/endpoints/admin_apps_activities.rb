# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Web
    module Api
      module Endpoints
        module AdminAppsActivities
          #
          # Get logs for a specified team/org
          #
          # @option options [Object] :app_id
          #   The ID of the app to get activities from.
          # @option options [string] :component_id
          #   The component ID of log events to be returned. Will be 'FnXXXXXX' for functions, and 'WfXXXXXX' for worflows.
          # @option options [string] :component_type
          #   The component type of log events to be returned. Acceptable values are ('events_api', 'workflows', 'functions', 'tables').
          # @option options [string] :cursor
          #   Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. See pagination for more detail.
          # @option options [integer] :limit
          #   The maximum number of items to return.
          # @option options [string] :log_event_type
          #   The event type of log events to be returned.
          # @option options [integer] :max_date_created
          #   The latest timestamp of the log to retrieve (epoch microseconds).
          # @option options [integer] :min_date_created
          #   The earliest timestamp of the log to retrieve (epoch microseconds).
          # @option options [string] :min_log_level
          #   The minimum log level of the log events to be returned. Defaults to 'info'. Acceptable values (in order of relative importance from smallest to largest) are ('trace', 'debug', 'info', 'warn', 'error', 'fatal').
          # @option options [string] :sort_direction
          #   The direction you want the data sorted by (always by timestamp).
          # @option options [string] :source
          #   The source of log events to be returned. Acceptable values are ('slack', 'developer').
          # @option options [string] :team_id
          #   The team who owns this log.
          # @option options [string] :trace_id
          #   The trace ID of log events to be returned.
          # @see https://api.slack.com/methods/admin.apps.activities.list
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/admin.apps.activities/admin.apps.activities.list.json
          def admin_apps_activities_list(options = {})
            if block_given?
              Pagination::Cursor.new(self, :admin_apps_activities_list, options).each do |page|
                yield page
              end
            else
              post('admin.apps.activities.list', options)
            end
          end
        end
      end
    end
  end
end
