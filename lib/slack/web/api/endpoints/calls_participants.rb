# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Web
    module Api
      module Endpoints
        module CallsParticipants
          #
          # Registers new participants added to a Call.
          #
          # @option options [Object] :id
          #   id returned by the calls.add method.
          # @option options [Object] :users
          #   The list of users to add as participants in the Call. Read more on how to specify users here.
          # @see https://api.slack.com/methods/calls.participants.add
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/calls.participants/calls.participants.add.json
          def calls_participants_add(options = {})
            throw ArgumentError.new('Required arguments :id missing') if options[:id].nil?
            throw ArgumentError.new('Required arguments :users missing') if options[:users].nil?
            post('calls.participants.add', options)
          end

          #
          # Registers participants removed from a Call.
          #
          # @option options [Object] :id
          #   id returned by the calls.add method.
          # @option options [Object] :users
          #   The list of users to remove as participants in the Call. Read more on how to specify users here.
          # @see https://api.slack.com/methods/calls.participants.remove
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/calls.participants/calls.participants.remove.json
          def calls_participants_remove(options = {})
            throw ArgumentError.new('Required arguments :id missing') if options[:id].nil?
            throw ArgumentError.new('Required arguments :users missing') if options[:users].nil?
            post('calls.participants.remove', options)
          end
        end
      end
    end
  end
end
