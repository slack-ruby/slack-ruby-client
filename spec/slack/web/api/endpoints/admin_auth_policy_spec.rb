# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

require 'spec_helper'

RSpec.describe Slack::Web::Api::Endpoints::AdminAuthPolicy do
  let(:client) { Slack::Web::Client.new }
  context 'admin.auth.policy_assignEntities' do
    it 'requires entity_ids' do
      expect { client.admin_auth_policy_assignEntities(entity_type: %q[], policy_name: %q[email_password]) }.to raise_error ArgumentError, /Required arguments :entity_ids missing/
    end
    it 'requires entity_type' do
      expect { client.admin_auth_policy_assignEntities(entity_ids: %q[['U12345','U27345']], policy_name: %q[email_password]) }.to raise_error ArgumentError, /Required arguments :entity_type missing/
    end
    it 'requires policy_name' do
      expect { client.admin_auth_policy_assignEntities(entity_ids: %q[['U12345','U27345']], entity_type: %q[]) }.to raise_error ArgumentError, /Required arguments :policy_name missing/
    end
  end
  context 'admin.auth.policy_getEntities' do
    it 'requires policy_name' do
      expect { client.admin_auth_policy_getEntities }.to raise_error ArgumentError, /Required arguments :policy_name missing/
    end
  end
  context 'admin.auth.policy_removeEntities' do
    it 'requires entity_ids' do
      expect { client.admin_auth_policy_removeEntities(entity_type: %q[], policy_name: %q[email_password]) }.to raise_error ArgumentError, /Required arguments :entity_ids missing/
    end
    it 'requires entity_type' do
      expect { client.admin_auth_policy_removeEntities(entity_ids: %q[['U1234']], policy_name: %q[email_password]) }.to raise_error ArgumentError, /Required arguments :entity_type missing/
    end
    it 'requires policy_name' do
      expect { client.admin_auth_policy_removeEntities(entity_ids: %q[['U1234']], entity_type: %q[]) }.to raise_error ArgumentError, /Required arguments :policy_name missing/
    end
  end
end
