# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

require 'spec_helper'

RSpec.describe Slack::Web::Api::Endpoints::Bookmarks do
  let(:client) { Slack::Web::Client.new }
  context 'bookmarks_add' do
    it 'requires channel_id' do
      expect { client.bookmarks_add(title: %q[], type: %q[]) }.to raise_error ArgumentError, /Required arguments :channel_id missing/
    end
    it 'requires title' do
      expect { client.bookmarks_add(channel_id: %q[C1234567890], type: %q[]) }.to raise_error ArgumentError, /Required arguments :title missing/
    end
    it 'requires type' do
      expect { client.bookmarks_add(channel_id: %q[C1234567890], title: %q[]) }.to raise_error ArgumentError, /Required arguments :type missing/
    end
  end
  context 'bookmarks_edit' do
    it 'requires bookmark_id' do
      expect { client.bookmarks_edit(channel_id: %q[C1234567890]) }.to raise_error ArgumentError, /Required arguments :bookmark_id missing/
    end
    it 'requires channel_id' do
      expect { client.bookmarks_edit(bookmark_id: %q[]) }.to raise_error ArgumentError, /Required arguments :channel_id missing/
    end
  end
  context 'bookmarks_list' do
    it 'requires channel_id' do
      expect { client.bookmarks_list }.to raise_error ArgumentError, /Required arguments :channel_id missing/
    end
  end
  context 'bookmarks_remove' do
    it 'requires bookmark_id' do
      expect { client.bookmarks_remove(channel_id: %q[C1234567890]) }.to raise_error ArgumentError, /Required arguments :bookmark_id missing/
    end
    it 'requires channel_id' do
      expect { client.bookmarks_remove(bookmark_id: %q[]) }.to raise_error ArgumentError, /Required arguments :channel_id missing/
    end
  end
end
